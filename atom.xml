<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>modalala</title>
  
  <subtitle>bo~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-09T01:29:13.549Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>miki7</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>oAth2(一)</title>
    <link href="http://yoursite.com/2019/08/08/oAuth2%E5%89%8D%E8%A8%80/"/>
    <id>http://yoursite.com/2019/08/08/oAuth2前言/</id>
    <published>2019-08-08T09:17:04.755Z</published>
    <updated>2019-08-09T01:29:13.549Z</updated>
    
    <content type="html"><![CDATA[<h1 id="oAth2"><a href="#oAth2" class="headerlink" title="oAth2"></a>oAth2</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="传统登录状态出现问题"><a href="#传统登录状态出现问题" class="headerlink" title="传统登录状态出现问题"></a>传统登录状态出现问题</h3><ul><li>多个服务分别部署，需要分别登录</li><li>第三方应用介入对用户登录信息的需求</li><li>用户无法限制第三方应用在某个微服务中的授权范围和使用期限</li><li>用户修改登录信息对第三方的应用影响</li><li>第三方应用的破解会导致用户密码泄露</li></ul><h3 id="OAth2"><a href="#OAth2" class="headerlink" title="OAth2"></a>OAth2</h3><h4 id="架构模式"><a href="#架构模式" class="headerlink" title="架构模式"></a>架构模式</h4><p><img src="/2019/08/08/oAuth2前言/30ef50ac37cf297f7235423dca467a0.png" alt="30ef50ac37cf297f7235423dca467a0"></p><h4 id="交互过程"><a href="#交互过程" class="headerlink" title="交互过程"></a>交互过程</h4><p><img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565248279599.png" alt="1565248279599"></p><h4 id="开放平台"><a href="#开放平台" class="headerlink" title="开放平台"></a>开放平台</h4><h4 id="交互模型"><a href="#交互模型" class="headerlink" title="交互模型"></a>交互模型</h4><ul><li>资源拥有者：用户</li><li>客户端：APP</li><li>服务提供方：<ul><li>认证服务器</li><li>资源服务器</li></ul></li></ul><p>步骤：</p><ol><li><p>用户 - 输入账号密码 -&gt; 腾讯提供的开放平台（提供：给谁授权、授权范围)</p><p><img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565249566465.png" alt="1565249566465"></p></li><li><p>腾讯提供的开放平台登录成功 - 有道云笔记 授权码-&gt; 有道云笔记根据授权码访问腾讯 <strong>认证服务器</strong>去拿 <strong>访问令牌</strong>，用 <strong>访问令牌</strong> 去腾讯的 <strong>资源服务器</strong>， <strong>资源服务器</strong> 根据令牌上的（授权人 &amp; 授权范围 ) 提供相应的资源：（用户昵称、头像、性别）。</p><p><img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565250055507.png" alt="1565250055507"></p></li><li><p>有道云笔记根据获取的信息先注册个账号（填入相关信息 ： 不过你还要再完善相关信息：手机这些）</p></li><li><p>总结：开放平台只是获取部分信息，简化一定的注册流程</p></li></ol><h4 id="遵循OAuth2-0协议-即接口"><a href="#遵循OAuth2-0协议-即接口" class="headerlink" title="遵循OAuth2.0协议  即接口"></a>遵循OAuth2.0协议  即接口</h4><p>提供认证和授权标准</p><p>例如：接口JAP @Table @Column @Id  Hibernate实现</p><p>用Spring Security 实现</p><h4 id="令牌的访问与刷新"><a href="#令牌的访问与刷新" class="headerlink" title="令牌的访问与刷新"></a>令牌的访问与刷新</h4><h5 id="原始令牌风险"><a href="#原始令牌风险" class="headerlink" title="原始令牌风险"></a>原始令牌风险</h5><p>url：<a href="http://www.sdfsdf/usr/token=123" target="_blank" rel="noopener">http://www.sdfsdf/usr/token=123</a></p><ol><li>toekn被人发现，被爬虫一直刷</li><li>token一直在，别人抓包，就能抓到令牌，数据被别人拿去。</li></ol><p>解决方案：</p><ul><li>令牌刷新，用旧令牌获取新令牌：传入refresh_token 、 client_id 认证服务器通过会返回新的Access Token </li><li>要求： Refresh Token 保存在客户端服务器</li><li>client_secret机制：client_id(客户端) &lt;-&gt; client_secret（服务端）,在申请client_id会一起把client_secret分配给客户端，client_secret ##妥善保管在服务器##,刷新Access Token ，需要验证client_secret。</li></ul><p>url变成：</p><p>url:<a href="http://www.sdfsdf//refresh?refresh_token=&amp;client_id=&amp;client_secret=" target="_blank" rel="noopener">http://www.sdfsdf//refresh?refresh_token=&amp;client_id=&amp;client_secret=</a></p><p>所以第三方应用提供：</p><ul><li>appId  =  client_id</li><li>appSecret = client_secret</li></ul><h4 id="客户端授权模式"><a href="#客户端授权模式" class="headerlink" title="客户端授权模式"></a>客户端授权模式</h4><ol><li><p>简化模式</p><p>纯静态页面应用，APP，小程序，HTML5，第三方天气，个人博客，只有前端js控制权。</p></li><li><p>授权码模式</p><p><img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565253618597.png" alt="1565253618597"></p></li><li><p>密码模式</p><p><img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565253750375.png" alt="1565253750375"></p></li><li><p>客户端模式</p><p><img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565253843719.png" alt="1565253843719"></p></li></ol><p>总结：<img src="/2019/08/08/oAuth2前言/D:%5Cblog%5Csource%5Cimages%5C1565253981885.png" alt="1565253981885"></p><p>+访问令牌+ access Toekn + Refresh Toekn</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;oAth2&quot;&gt;&lt;a href=&quot;#oAth2&quot; class=&quot;headerlink&quot; title=&quot;oAth2&quot;&gt;&lt;/a&gt;oAth2&lt;/h1&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="oAth2" scheme="http://yoursite.com/tags/oAth2/"/>
    
      <category term="sso" scheme="http://yoursite.com/tags/sso/"/>
    
  </entry>
  
  <entry>
    <title>java网络编程</title>
    <link href="http://yoursite.com/2019/07/28/Netty/"/>
    <id>http://yoursite.com/2019/07/28/Netty/</id>
    <published>2019-07-28T10:05:51.226Z</published>
    <updated>2019-08-08T12:10:41.706Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java网络编程"><a href="#java网络编程" class="headerlink" title="java网络编程"></a>java网络编程</h1><h2 id="1、NIO"><a href="#1、NIO" class="headerlink" title="1、NIO"></a>1、NIO</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">psvm&#123;</span><br><span class="line">    ServerSocket ss = <span class="keyword">new</span> ServerSocket(); </span><br><span class="line">    ss.bind(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>),<span class="number">8888</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        Socket s = ss.accept();</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt;&#123;</span><br><span class="line">                heandle(s);</span><br><span class="line">            &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Socket s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = s.getInputStream().read(bytes);</span><br><span class="line">        </span><br><span class="line">        s.getOutputStream().write(bytes,<span class="number">0</span>,len);</span><br><span class="line">    &#125;<span class="keyword">catch</span> &#123;bala&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre class="mermaid">graph RL    ss --bind --> s        subgraph server            s(s:127.0.0.1:8888)        end        subgraph listen            s --accept--> thread1            s --accept--> thread2             s --accept-->thread3        end</pre><h3 id="NIO会出现的问题"><a href="#NIO会出现的问题" class="headerlink" title="NIO会出现的问题"></a>NIO会出现的问题</h3><ul><li>ss.accept()内的线程会</li><li>read</li><li>write</li></ul><h3 id="解决方案：轮询"><a href="#解决方案：轮询" class="headerlink" title="解决方案：轮询"></a>解决方案：轮询</h3><ol><li><h4 id="NIO-single-Thread（NewNon-Blocking"><a href="#NIO-single-Thread（NewNon-Blocking" class="headerlink" title="NIO-single Thread（NewNon-Blocking)"></a>NIO-single Thread（NewNon-Blocking)</h4><p>说明：大管家selector轮询：如果有客户端连接，就处理（单线程）压力很大</p><p><img src="/images/NIOsingleThread.png" alt="1564315140781"></p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">psvm&#123;</span><br><span class="line">    ServerSocketChannel ssc = .open();</span><br><span class="line">    ssc.socket().bind (~~~);</span><br><span class="line">    ssc.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">    Selector selector = Selector.open();</span><br><span class="line">    ssc.register(selector ,~);</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        selector.select(); <span class="comment">//轮询选择到的请求 -&gt; 也是阻塞</span></span><br><span class="line">       Set&lt;SelectionKey&gt; key -&gt; selector.selectedKeys(); <span class="comment">//事件发生 把当前事件设个key</span></span><br><span class="line">        <span class="comment">//遍历SelectinKey 把得到的key remove</span></span><br><span class="line">        handle(key)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handle</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ServerSocketChannel ssc  = key.channel();</span><br><span class="line">    SocketChannel sc = ssc.accept();</span><br><span class="line">    <span class="comment">//阻塞 -&gt; false</span></span><br><span class="line">    sc.register( <span class="comment">//设一个key)</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><pre class="mermaid">graph RL     boy(大管家) --注册--> accept1    boy(大管家) --注册--> accept2    subgraph list        key_one         key_two     end    subgraph 插座        accept1 --register--- key_one        accept2 --register--- key_two          等待    end</pre><p>#### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java网络编程&quot;&gt;&lt;a href=&quot;#java网络编程&quot; class=&quot;headerlink&quot; title=&quot;java网络编程&quot;&gt;&lt;/a&gt;java网络编程&lt;/h1&gt;&lt;h2 id=&quot;1、NIO&quot;&gt;&lt;a href=&quot;#1、NIO&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="Netty" scheme="http://yoursite.com/tags/Netty/"/>
    
  </entry>
  
  <entry>
    <title>标签测试</title>
    <link href="http://yoursite.com/2019/07/28/%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/07/28/标签测试/</id>
    <published>2019-07-28T03:11:35.745Z</published>
    <updated>2019-07-28T03:18:42.997Z</updated>
    
    <content type="html"><![CDATA[<p>随便写写</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随便写写&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Testing" scheme="http://yoursite.com/tags/Testing/"/>
    
      <category term="Another Tag" scheme="http://yoursite.com/tags/Another-Tag/"/>
    
  </entry>
  
  <entry>
    <title>hexo第二次试验</title>
    <link href="http://yoursite.com/2019/07/28/hexo%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AF%95%E9%AA%8C/"/>
    <id>http://yoursite.com/2019/07/28/hexo第二次试验/</id>
    <published>2019-07-28T02:55:43.000Z</published>
    <updated>2019-07-28T03:00:46.804Z</updated>
    
    <content type="html"><![CDATA[<p>sdfsdfsd</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sdfsdfsd&lt;/p&gt;

      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>打 打一个大菠萝呀</title>
    <link href="http://yoursite.com/2019/07/27/%E6%89%93-%E6%89%93%E4%B8%80%E4%B8%AA%E5%A4%A7%E8%8F%A0%E8%90%9D%E5%91%80/"/>
    <id>http://yoursite.com/2019/07/27/打-打一个大菠萝呀/</id>
    <published>2019-07-27T02:47:04.000Z</published>
    <updated>2019-07-27T02:47:04.802Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/07/27/hello-world/"/>
    <id>http://yoursite.com/2019/07/27/hello-world/</id>
    <published>2019-07-27T02:36:02.073Z</published>
    <updated>2019-07-27T02:36:02.074Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
